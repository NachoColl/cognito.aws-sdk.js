
language: node_js
node_js:
  - "7"
# This is needed to avoid building all the tags pushed by travis
branches:
  except:
    - /^v?\d+\.\d+\.\d+$/
before_install:
  # versioning: http://phdesign.com.au/programming/auto-increment-project-version-from-travis/
  # Create a git tag of the new version to use
  # If package.json major and minor versions match last tag, then increment last tag. Else use package.json major.minor.0.
  - "{ sed -nE 's/^[ \\t]*\"version\": \"([0-9]{1,}\\.[0-9]{1,}\\.)[0-9x]{1,}\",$/\\1/p' package.json; git describe --abbrev=0 --tags | sed -E 's/^v([0-9]{1,}\\.[0-9]{1,}\\.)([0-9]{1,})$/\\1 \\2/g'; } | tr \"\\n\" \" \" | awk '{printf($1==$2?\"v\"$2$3+1:\"v\"$1\"0\")}' | xargs -I {} git tag -a {} -m \"{}\"\n"
  # Update package.json based on the git tag we just created
  - npm --no-git-tag-version version from-git
  - NEW_VERSION=$(git describe --abbrev=0 --tags)
install:
  - npm install
script: 
  - gulp compress
  - gulp update-readme
  - git tag "$NEW_VERSION-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)"
  - cat README.md
before_deploy:
  - pip install awscli --upgrade --user
deploy:
  - provider: script
    skip_cleanup: true
    script:
      - aws s3 sync ./dist s3://$AWS_S3_PATH/$NEW_VERSION
  - provider: releases
    api_key: ${GH_TOKEN}
    file: README.md
    overwrite: true
    skip_cleanup: true